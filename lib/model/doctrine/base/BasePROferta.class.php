<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PROferta', 'doctrine');

/**
 * BasePROferta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $creador_id
 * @property integer $cliente_id
 * @property string $titulo
 * @property string $expediente
 * @property string $descripcion_oferta
 * @property string $tipo_trabajo
 * @property integer $tipo_oferta
 * @property float $base_licitacion
 * @property float $fianza_provisional
 * @property string $tipo_facturacion
 * @property float $estructura
 * @property float $financiacion
 * @property integer $descuento
 * @property integer $estado
 * @property integer $duracion
 * @property timestamp $fecha_presentacion
 * @property timestamp $fecha_creacion
 * @property timestamp $fecha_actualizacion
 * @property boolean $firma1
 * @property boolean $firma2
 * @property string $descripcion_pliego
 * @property boolean $claridad
 * @property boolean $nuevo
 * @property boolean $experiencia
 * @property integer $tiempo_elaboracion
 * @property boolean $invitados
 * @property boolean $aportacion
 * @property boolean $condicionada
 * @property boolean $enchufe
 * @property string $contacto
 * @property boolean $previamente
 * @property integer $imagen
 * @property boolean $posicion_nuestra
 * @property string $porque_posicion
 * @property boolean $posicion_competencia
 * @property string $porque_competencia
 * @property string $competidor
 * @property integer $ventaja
 * @property boolean $exito
 * @property string $porque_exito
 * @property PRCliente $PRCliente
 * @property PREmpleado $PREmpleado
 * @property TEstado $TEstado
 * @property TOferta $TOferta
 * @property PRCoste $PRCoste
 * @property Doctrine_Collection $PRProyecto
 * @property Doctrine_Collection $PRHito
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getCreadorId()            Returns the current record's "creador_id" value
 * @method integer             getClienteId()            Returns the current record's "cliente_id" value
 * @method string              getTitulo()               Returns the current record's "titulo" value
 * @method string              getExpediente()           Returns the current record's "expediente" value
 * @method string              getDescripcionOferta()    Returns the current record's "descripcion_oferta" value
 * @method string              getTipoTrabajo()          Returns the current record's "tipo_trabajo" value
 * @method integer             getTipoOferta()           Returns the current record's "tipo_oferta" value
 * @method float               getBaseLicitacion()       Returns the current record's "base_licitacion" value
 * @method float               getFianzaProvisional()    Returns the current record's "fianza_provisional" value
 * @method string              getTipoFacturacion()      Returns the current record's "tipo_facturacion" value
 * @method float               getEstructura()           Returns the current record's "estructura" value
 * @method float               getFinanciacion()         Returns the current record's "financiacion" value
 * @method integer             getDescuento()            Returns the current record's "descuento" value
 * @method integer             getEstado()               Returns the current record's "estado" value
 * @method integer             getDuracion()             Returns the current record's "duracion" value
 * @method timestamp           getFechaPresentacion()    Returns the current record's "fecha_presentacion" value
 * @method timestamp           getFechaCreacion()        Returns the current record's "fecha_creacion" value
 * @method timestamp           getFechaActualizacion()   Returns the current record's "fecha_actualizacion" value
 * @method boolean             getFirma1()               Returns the current record's "firma1" value
 * @method boolean             getFirma2()               Returns the current record's "firma2" value
 * @method string              getDescripcionPliego()    Returns the current record's "descripcion_pliego" value
 * @method boolean             getClaridad()             Returns the current record's "claridad" value
 * @method boolean             getNuevo()                Returns the current record's "nuevo" value
 * @method boolean             getExperiencia()          Returns the current record's "experiencia" value
 * @method integer             getTiempoElaboracion()    Returns the current record's "tiempo_elaboracion" value
 * @method boolean             getInvitados()            Returns the current record's "invitados" value
 * @method boolean             getAportacion()           Returns the current record's "aportacion" value
 * @method boolean             getCondicionada()         Returns the current record's "condicionada" value
 * @method boolean             getEnchufe()              Returns the current record's "enchufe" value
 * @method string              getContacto()             Returns the current record's "contacto" value
 * @method boolean             getPreviamente()          Returns the current record's "previamente" value
 * @method integer             getImagen()               Returns the current record's "imagen" value
 * @method boolean             getPosicionNuestra()      Returns the current record's "posicion_nuestra" value
 * @method string              getPorquePosicion()       Returns the current record's "porque_posicion" value
 * @method boolean             getPosicionCompetencia()  Returns the current record's "posicion_competencia" value
 * @method string              getPorqueCompetencia()    Returns the current record's "porque_competencia" value
 * @method string              getCompetidor()           Returns the current record's "competidor" value
 * @method integer             getVentaja()              Returns the current record's "ventaja" value
 * @method boolean             getExito()                Returns the current record's "exito" value
 * @method string              getPorqueExito()          Returns the current record's "porque_exito" value
 * @method PRCliente           getPRCliente()            Returns the current record's "PRCliente" value
 * @method PREmpleado          getPREmpleado()           Returns the current record's "PREmpleado" value
 * @method TEstado             getTEstado()              Returns the current record's "TEstado" value
 * @method TOferta             getTOferta()              Returns the current record's "TOferta" value
 * @method PRCoste             getPRCoste()              Returns the current record's "PRCoste" value
 * @method Doctrine_Collection getPRProyecto()           Returns the current record's "PRProyecto" collection
 * @method Doctrine_Collection getPRHito()               Returns the current record's "PRHito" collection
 * @method PROferta            setId()                   Sets the current record's "id" value
 * @method PROferta            setCreadorId()            Sets the current record's "creador_id" value
 * @method PROferta            setClienteId()            Sets the current record's "cliente_id" value
 * @method PROferta            setTitulo()               Sets the current record's "titulo" value
 * @method PROferta            setExpediente()           Sets the current record's "expediente" value
 * @method PROferta            setDescripcionOferta()    Sets the current record's "descripcion_oferta" value
 * @method PROferta            setTipoTrabajo()          Sets the current record's "tipo_trabajo" value
 * @method PROferta            setTipoOferta()           Sets the current record's "tipo_oferta" value
 * @method PROferta            setBaseLicitacion()       Sets the current record's "base_licitacion" value
 * @method PROferta            setFianzaProvisional()    Sets the current record's "fianza_provisional" value
 * @method PROferta            setTipoFacturacion()      Sets the current record's "tipo_facturacion" value
 * @method PROferta            setEstructura()           Sets the current record's "estructura" value
 * @method PROferta            setFinanciacion()         Sets the current record's "financiacion" value
 * @method PROferta            setDescuento()            Sets the current record's "descuento" value
 * @method PROferta            setEstado()               Sets the current record's "estado" value
 * @method PROferta            setDuracion()             Sets the current record's "duracion" value
 * @method PROferta            setFechaPresentacion()    Sets the current record's "fecha_presentacion" value
 * @method PROferta            setFechaCreacion()        Sets the current record's "fecha_creacion" value
 * @method PROferta            setFechaActualizacion()   Sets the current record's "fecha_actualizacion" value
 * @method PROferta            setFirma1()               Sets the current record's "firma1" value
 * @method PROferta            setFirma2()               Sets the current record's "firma2" value
 * @method PROferta            setDescripcionPliego()    Sets the current record's "descripcion_pliego" value
 * @method PROferta            setClaridad()             Sets the current record's "claridad" value
 * @method PROferta            setNuevo()                Sets the current record's "nuevo" value
 * @method PROferta            setExperiencia()          Sets the current record's "experiencia" value
 * @method PROferta            setTiempoElaboracion()    Sets the current record's "tiempo_elaboracion" value
 * @method PROferta            setInvitados()            Sets the current record's "invitados" value
 * @method PROferta            setAportacion()           Sets the current record's "aportacion" value
 * @method PROferta            setCondicionada()         Sets the current record's "condicionada" value
 * @method PROferta            setEnchufe()              Sets the current record's "enchufe" value
 * @method PROferta            setContacto()             Sets the current record's "contacto" value
 * @method PROferta            setPreviamente()          Sets the current record's "previamente" value
 * @method PROferta            setImagen()               Sets the current record's "imagen" value
 * @method PROferta            setPosicionNuestra()      Sets the current record's "posicion_nuestra" value
 * @method PROferta            setPorquePosicion()       Sets the current record's "porque_posicion" value
 * @method PROferta            setPosicionCompetencia()  Sets the current record's "posicion_competencia" value
 * @method PROferta            setPorqueCompetencia()    Sets the current record's "porque_competencia" value
 * @method PROferta            setCompetidor()           Sets the current record's "competidor" value
 * @method PROferta            setVentaja()              Sets the current record's "ventaja" value
 * @method PROferta            setExito()                Sets the current record's "exito" value
 * @method PROferta            setPorqueExito()          Sets the current record's "porque_exito" value
 * @method PROferta            setPRCliente()            Sets the current record's "PRCliente" value
 * @method PROferta            setPREmpleado()           Sets the current record's "PREmpleado" value
 * @method PROferta            setTEstado()              Sets the current record's "TEstado" value
 * @method PROferta            setTOferta()              Sets the current record's "TOferta" value
 * @method PROferta            setPRCoste()              Sets the current record's "PRCoste" value
 * @method PROferta            setPRProyecto()           Sets the current record's "PRProyecto" collection
 * @method PROferta            setPRHito()               Sets the current record's "PRHito" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePROferta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('p_r_oferta');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('creador_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cliente_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('titulo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('expediente', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('descripcion_oferta', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('tipo_trabajo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('tipo_oferta', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('base_licitacion', 'float', 9, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 9,
             'scale' => '2',
             ));
        $this->hasColumn('fianza_provisional', 'float', 9, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 9,
             'scale' => '2',
             ));
        $this->hasColumn('tipo_facturacion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'Certificación mensual',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('estructura', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '8',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             'scale' => '2',
             ));
        $this->hasColumn('financiacion', 'float', 4, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '6.5',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             'scale' => '2',
             ));
        $this->hasColumn('descuento', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('estado', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('duracion', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('fecha_presentacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'format' => 'd-m-Y',
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_creacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_actualizacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('firma1', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('firma2', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('descripcion_pliego', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('claridad', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('nuevo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('experiencia', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('tiempo_elaboracion', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '1',
             'length' => 2,
             ));
        $this->hasColumn('invitados', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('aportacion', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('condicionada', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('enchufe', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('contacto', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('previamente', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('imagen', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '1',
             'length' => 2,
             ));
        $this->hasColumn('posicion_nuestra', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('porque_posicion', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('posicion_competencia', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('porque_competencia', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('competidor', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Emergya',
             'length' => 255,
             ));
        $this->hasColumn('ventaja', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '1',
             'length' => 2,
             ));
        $this->hasColumn('exito', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => '0',
             ));
        $this->hasColumn('porque_exito', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PRCliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $this->hasOne('PREmpleado', array(
             'local' => 'creador_id',
             'foreign' => 'id'));

        $this->hasOne('TEstado', array(
             'local' => 'estado',
             'foreign' => 'id'));

        $this->hasOne('TOferta', array(
             'local' => 'tipo_oferta',
             'foreign' => 'id'));

        $this->hasOne('PRCoste', array(
             'local' => 'id',
             'foreign' => 'oferta_id'));

        $this->hasMany('PRProyecto', array(
             'local' => 'id',
             'foreign' => 'oferta_id'));

        $this->hasMany('PRHito', array(
             'local' => 'id',
             'foreign' => 'oferta_id'));
    }
}